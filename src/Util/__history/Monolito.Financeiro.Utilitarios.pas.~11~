unit Monolito.Financeiro.Utilitarios;

interface

uses
  Vcl.DBGrids;
type
  TUtilitarios = class
    class Function GetID : String;
    class function LikeFind(Pesquisa: String; Grid: TDBGrid): string;
    class function FormatoMoeda(aValue : Currency): String;
    class function FormatarValor(aValue: Currency; Decimais : Integer = 2): string;
    class function TruncarValor(aValue: Currency; Decimais: Integer = 2): currency;
    class procedure KeyPressValor(Sender: TObject; var Key: Char);
  end;
implementation

{ TUtilitarios }

uses
  System.SysUtils, Vcl.StdCtrls, System.Math;

class function TUtilitarios.FormatarValor(aValue: Currency;
  Decimais: Integer): string;
begin
  aValue :
end;

class function TUtilitarios.FormatoMoeda(aValue: Currency): String;
begin
  Result := Format('%m', [aValue]);
end;

class function TUtilitarios.GetID: String;
begin
  Result := TGuid.NewGuid.ToString;
  Result := StringReplace(Result, '{', '',[rfReplaceAll]);
  Result := StringReplace(Result, '}', '',[rfReplaceAll]);
end;

class procedure TUtilitarios.KeyPressValor(Sender: TObject; var Key: Char);
begin
  if Key = FormatSettings.ThousandSeparator then
    Key := FormatSettings.DecimalSeparator;

  if not (CharInSet(Key, ['0'..'9', chr (8), FormatSettings.DecimalSeparator])) then
    Key := #0;

  if (Key = FormatSettings.DecimalSeparator) and (pos(Key, TEdit(Sender).Text) > 0) then
    Key := #0;

end;

class function TUtilitarios.LikeFind(Pesquisa: String; Grid: TDBGrid): string;
var
  LContador: Integer;
begin
  Result := '';
  if Pesquisa.Trim.IsEmpty then
    exit;
  for LContador := 0 to Pred(Grid.Columns.Count) do
    Result := Result + Grid.Columns.Items[LContador].FieldName +
      ' LIKE ' + QuotedStr('%' + Trim(Pesquisa) + '%') + ' OR ';
  Result := ' AND (' + Copy(Result, 1, length (Result) - 4) + ')';
end;

class function TUtilitarios.TruncarValor(aValue: Currency;
  Decimais: Integer): currency;
var
  LFator : Double;
begin
  LFator := Power(10, Decimais);
  Result := Trunc(aValue * LFator) / LFator;
end;

end.
